#!/bin/python3
# -*- coding: utf-8 -*-
# -*- coding: utf-8 -*-

import socket, curses, threading, time
from curses import wrapper
from threading import *


def printScreen(stdscr):
    t1 = time.perf_counter()
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    s.bind(("", 22222))
    curses.start_color()
    curses.init_pair( 1, curses.COLOR_BLACK, curses.COLOR_RED)
    curses.init_pair( 2, curses.COLOR_BLACK, curses.COLOR_WHITE)

    while True:
        data, addr = s.recvfrom(1024)
        
        s_tmp = data.decode('utf-8').split('|')
        s_tmp1 = s_tmp[0].split('.')[0]
        s_tmp2 = s_tmp[1].split('.')[0]
        
        x1 = int ( (curses.COLS - 5 )/2)
        x2 = int ( (curses.COLS + 5 )/2)

        stdscr.clear()
        stdscr.refresh()
        stdscr.addstr(4, x1, s_tmp1+"°C", curses.A_BOLD)
        stdscr.addstr(4, x2, s_tmp2+"°C", curses.A_BOLD)
        
        v1 = int(int(s_tmp1)/10)
        v2 = int(int(s_tmp2)/10)
        
        for i in range(10):
            for j in range(4):
                if i < 10-v1:
                    stdscr.addstr(5+i, x1+j, " ", curses.color_pair(2))
                else:
                    stdscr.addstr(5+i, x1+j, " ", curses.color_pair(1))

        for i in range(10):
            for j in range(4):
                if i < 10-v2:
                    stdscr.addstr(5+i, x2+j, " ", curses.color_pair(2))
                else:
                    stdscr.addstr(5+i, x2+j, " ", curses.color_pair(1))


        t2 = time.perf_counter()
        t = t2 - t1
        stdscr.refresh()


def main(stdscr):
    curses.curs_set(False)

    T = Thread(target=printScreen, args=(stdscr,));
    T.setDaemon(True)
    T.start()

    c = stdscr.getch()
    while c != ord('q'):
        c = stdscr.getch()

wrapper(main)
